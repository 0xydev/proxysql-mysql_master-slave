# Önce mysql master servisini başlat
# - monitor_user ve monitor_password ile monitor kullanıcısı oluşturuyoruz.
# - proxysql

# ve ardından mysql slave servislerini oluşturuyoruz.
# Sonra proxysql ve phpmyadmin servislerini oluşturuyoruz.

services:
  setup:
    image: mysql:5.7
    working_dir: /
    entrypoint: /run.sh
    volumes:
      - ./run.sh:/run.sh
    depends_on:
      master1:
        condition: service_healthy
      master2:
        condition: service_healthy
      master3:
        condition: service_healthy
    networks:
      - mysql_network

  master1:
    image: mysql:5.7
    container_name: master1
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=1
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master1_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_password
    ports:
      - "33061:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      master2:
        condition: service_healthy
      master3:
        condition: service_healthy
  
  master2:
    image: mysql:5.7
    container_name: master2
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=2
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master2_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_password
    ports:
      - "33062:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5

  master3:
    image: mysql:5.7
    container_name: master3
    restart: always
    command: --defaults-file=/etc/mysql/my.cnf --server-id=3
    volumes:
      - ./mysql.cnf:/etc/mysql/my.cnf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - master3_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: test_db
      MYSQL_USER: repl_user
      MYSQL_PASSWORD: repl_password
    ports:
      - "33063:3306"
    networks:
      - mysql_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mysql_network:
    driver: bridge

volumes:
   master1_data:
   master2_data:
   master3_data:

  # # MySQL Slave 1
  # mysql-slave-1:
  #   image: mysql:5.7
  #   command: >
  #     --server-id=2
  #     --relay-log=mysql-relay-bin
  #     --log-bin=mysql-bin
  #     --binlog-format=ROW
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root_password
  #     TZ: Europe/Istanbul
  #   volumes:
  #     - slave_data_1:/var/lib/mysql
  #     - ./slave-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
  #     - /etc/localtime:/etc/localtime:ro
  #   ports:
  #     - "3307:3306"
  #   networks:
  #     - mysql-network
  #   depends_on:
  #     mysql-master:
  #       condition: service_healthy

  # # MySQL Slave 2
  # mysql-slave-2:
  #   image: mysql:5.7
  #   command: >
  #     --server-id=3
  #     --relay-log=mysql-relay-bin
  #     --log-bin=mysql-bin
  #     --binlog-format=ROW
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root_password
  #     TZ: Europe/Istanbul
  #   volumes:
  #     - slave_data_2:/var/lib/mysql
  #     - ./slave-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
  #     - /etc/localtime:/etc/localtime:ro
  #   ports:
  #     - "3309:3306"
  #   networks:
  #     - mysql-network
  #   depends_on:
  #     mysql-master:
  #       condition: service_healthy

  # ProxySQL
#   proxysql:
#     image: proxysql/proxysql
#     container_name: proxysql
#     environment:
#       MYSQL_ROOT_PASSWORD: root_password
#       TZ: Europe/Istanbul
#     volumes:
#       - ./proxysql.cnf:/etc/proxysql.cnf
#       - /etc/localtime:/etc/localtime:ro
#     ports:
#       - "6032:6032" # Admin arayüzü için
#       - "6033:6033" # MySQL bağlantı portu
#     networks:
#       - mysql-network
#     depends_on:
#       - mysql-master
#       - mysql-slave-1
#       - mysql-slave-2

#   # phpMyAdmin
#   phpmyadmin:
#     image: phpmyadmin/phpmyadmin
#     environment:
#       PMA_HOST: proxysql
#       PMA_USER: app_user
#       PMA_PASSWORD: app_pass123
#       PMA_PORT: 6033
#       TZ: Europe/Istanbul
#     ports:
#       - "8080:80"
#     networks:
#       - mysql-network
#     depends_on:
#       - proxysql

# networks:
#   mysql-network:

# volumes:
#   master_data:
#   slave_data_1:
#   slave_data_2: